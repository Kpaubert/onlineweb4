version: "3.9"
services:
  db:
    build:
     context: .
     dockerfile: Db.Dockerfile
    environment:
      POSTGRES_PASSWORD: eple-er-hemmeligheten
      POSTGRES_USER: dotkom-user
      POSTGRES_DB: onlineweb4
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      # persist local testing data
      - ./data/postgresql:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - online-nett
  redis:
    # see: https://docs.celeryproject.org/en/stable/getting-started/backends-and-brokers/redis.html#broker-redis
    image: redis:6.2-alpine
    environment:
      - REDIS_REPLICATION_MODE=master
    command: redis-server --requirepass bananen-er-nokkelen --bind 0.0.0.0 --port 6379
    volumes:
      - ./data/redis:/data
    networks:
      - online-nett
  celery-worker:
    build:
      context: .
      dockerfile: Celery.Dockerfile
    volumes:
      - ./log/celery:/var/log/celery
    command: celery worker -A onlineweb4.celery --loglevel=${LOG_LEVEL:-INFO} --concurrency=8 --logfile=/var/log/celery/w1%I.log
    env_file:
      - config/ow4.dev.env
    depends_on:
      - redis
    networks:
      - online-nett
  celery-beat:
    build:
      context: .
      dockerfile: Celery.Dockerfile
    volumes:
      - ./log/celery:/var/log/celery
    command: celery beat -A onlineweb4.celery --loglevel=${LOG_LEVEL:-INFO} --logfile=/var/log/celery/beat.log
    env_file:
      - config/ow4.dev.env
    depends_on:
      - redis
    networks:
      - online-nett
  mommy:
    build:
      context: .
      dockerfile: Celery.Dockerfile
    command: python manage.py mommy
    depends_on:
      - db
      - celery-beat
      - celery-worker
    env_file:
      - config/ow4.dev.env
    networks:
      - online-nett
  django:
    build:
      context: .
      dockerfile: Django.Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/srv/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - celery-beat
      - celery-worker
    env_file:
      - config/ow4.dev.env
    networks:
      - online-nett
  webpack:
    build:
      context: .
      dockerfile: Webpack.Dockerfile
    command: npm start
    volumes:
      - .:/srv/app
      - /srv/app/node_modules
    ports:
      - "3000:3000"
    environment:
      - OW4_ABAKUS_OVERRIDE
      - WEBPACK_DEV_IP=0.0.0.0
      - WEBPACK_DEV_PORT=3000
      - WEBPACK_DEV_PUBLIC_IP=${WEBPACK_DEV_PUBLIC_IP:-localhost}
      - WEBPACK_DEV_PUBLIC_PORT
      - WEBPACK_DEV_HTTPS
    networks:
      - online-nett

networks:
  online-nett:
